{"version":3,"sources":["components/charts/barchart/BarChart.jsx","mock/data.jsx","constants/events.js","components/eventsList/EventList.jsx","styles/global.ts","App.js","index.js"],"names":["BarChart","chartData","data","options","plugins","title","display","text","legend","position","Data","useEffect","a","fetch","res","json","setChartData","labels","map","crypto","name","datasets","label","priceUsd","backgroundColor","fetchPrices","useState","className","EventsList","id","description","icon","AccessAlarmOutlined","ChatOutlined","EqualizerOutlined","chart","EventList","AnimateSharedLayout","motion","ul","layout","initial","borderRadius","event","Item","props","isOpen","setIsOpen","li","onClick","whileHover","scale","transition","duration","div","AnimatePresence","Content","opacity","animate","exit","Typography","variant","createGlobalStyle","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2SAEaA,EAAW,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACzB,OACE,8BACE,cAAC,IAAD,CACEC,KAAMD,EACNE,QAAS,CACPC,QAAS,CACPC,MAAO,CACLC,SAAS,EACTC,KAAM,yBAERC,OAAQ,CACNF,SAAS,EACTG,SAAU,iBCZT,SAASC,IACtBC,qBAAU,YACS,uCAAG,8BAAAC,EAAA,sEACAC,MAAM,6CADN,cACZC,EADY,gBAECA,EAAIC,OAFL,OAEZb,EAFY,OAGlBc,EAAa,CACXC,OAAQf,EAAKA,KAAKgB,KAAI,SAACC,GAAD,OAAYA,EAAOC,QACzCC,SAAU,CACR,CACEC,MAAO,eACPpB,KAAMA,EAAKA,KAAKgB,KAAI,SAACC,GAAD,OAAYA,EAAOI,YACvCC,gBAAiB,CACf,UACA,UACA,UACA,UACA,eAdU,2CAAH,qDAoBjBC,KACC,IAvB0B,MAwBKC,mBAAS,IAxBd,mBAwBtBzB,EAxBsB,KAwBXe,EAxBW,KAyB7B,OACE,qBAAKW,UAAU,MAAf,SACE,cAAC,EAAD,CAAU1B,UAAWA,MCtBpB,IAAI2B,EAAa,CACtB,CACEC,GAAI,EACJxB,MAAO,SACPyB,YACE,2EACFC,KAAM,cAACC,EAAA,EAAD,KAGR,CACEH,GAAI,EACJxB,MAAO,SACPyB,YACE,2EACFC,KAAM,cAACE,EAAA,EAAD,KAGR,CACEJ,GAAI,EACJxB,MAAO,SACPyB,YACE,2EACFC,KAAM,cAACG,EAAA,EAAD,IACNC,MAAO,cAACzB,EAAD,M,SCdI,SAAS0B,IACtB,OACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAOC,GAAR,CAAWC,QAAM,EAACC,QAAS,CAAEC,aAAc,IAA3C,SACGd,EAAWV,KAAI,SAACyB,GAAD,OACd,cAACC,EAAD,CAAqBD,MAAOA,GAAjBA,EAAMd,WAO3B,SAASe,EAAKC,GAAQ,IAAD,EACSnB,oBAAS,GADlB,mBACZoB,EADY,KACJC,EADI,KAKnB,OACE,eAACT,EAAA,EAAOU,GAAR,CACER,QAAM,EACNS,QALe,kBAAMF,GAAWD,IAMhCL,QAAS,CAAEC,aAAc,IACzBQ,WAAY,CACVC,MAAO,KACPC,WAAY,CAAEC,SAAU,KAN5B,UASE,eAACf,EAAA,EAAOgB,IAAR,CAAY3B,UAAU,aAAtB,UACE,cAACW,EAAA,EAAOgB,IAAR,CAAYd,QAAM,EAAlB,SAAoBK,EAAMF,MAAMZ,OAEhC,cAACO,EAAA,EAAOgB,IAAR,CAAY3B,UAAU,YAAYa,QAAM,EAAxC,SACGK,EAAMF,MAAMtC,WAGjB,cAACkD,EAAA,EAAD,UACGT,GACC,cAACU,EAAD,CACE1B,YAAae,EAAMF,MAAMb,YACzBK,MAAOU,EAAMF,MAAMR,aAQ/B,SAASqB,EAAQX,GACf,OACE,eAACP,EAAA,EAAOgB,IAAR,CACEd,QAAM,EACNC,QAAS,CAAEgB,QAAS,GACpBC,QAAS,CAAED,QAAS,GACpBE,KAAM,CAAEF,QAAS,GAJnB,UAME,cAACG,EAAA,EAAD,CAAYC,QAAQ,QAApB,SAA6BhB,EAAMf,cAClCe,EAAMV,S,wBCtEE2B,cAAf,yGCeeC,MAXf,WACE,OACE,qCACE,cAAC,EAAD,IAEA,cAAC3B,EAAD,QCPN4B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e0e1649a.chunk.js","sourcesContent":["import { Bar } from \"react-chartjs-2\";\n\nexport const BarChart = ({ chartData }) => {\n  return (\n    <div>\n      <Bar\n        data={chartData}\n        options={{\n          plugins: {\n            title: {\n              display: true,\n              text: \"Cryptocurrency prices\",\n            },\n            legend: {\n              display: true,\n              position: \"bottom\",\n            },\n          },\n        }}\n      />\n    </div>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { BarChart } from \"../components/charts/barchart/BarChart\";\n\nexport default function Data() {\n  useEffect(() => {\n    const fetchPrices = async () => {\n      const res = await fetch(\"https://api.coincap.io/v2/assets/?limit=5\");\n      const data = await res.json();\n      setChartData({\n        labels: data.data.map((crypto) => crypto.name),\n        datasets: [\n          {\n            label: \"Price in USD\",\n            data: data.data.map((crypto) => crypto.priceUsd),\n            backgroundColor: [\n              \"#ffbb11\",\n              \"#ecf0f1\",\n              \"#50AF95\",\n              \"#f3ba2f\",\n              \"#2a71d0\",\n            ],\n          },\n        ],\n      });\n    };\n    fetchPrices();\n  }, []);\n  const [chartData, setChartData] = useState({});\n  return (\n    <div className=\"App\">\n      <BarChart chartData={chartData} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport {\n  AccessAlarmOutlined,\n  ChatOutlined,\n  EqualizerOutlined,\n} from \"@material-ui/icons\";\nimport Data from \"../mock/data\";\n\nexport let EventsList = [\n  {\n    id: 0,\n    title: \"Item 1\",\n    description:\n      \"Descriçao bolada sobre o item, que vai ser um pouco maior que o usual\",\n    icon: <AccessAlarmOutlined />,\n    // chart: <Data />,\n  },\n  {\n    id: 1,\n    title: \"Item 2\",\n    description:\n      \"Descriçao bolada sobre o item, que vai ser um pouco maior que o usual\",\n    icon: <ChatOutlined />,\n    // chart: <Data />,\n  },\n  {\n    id: 2,\n    title: \"Item 3\",\n    description:\n      \"Descriçao bolada sobre o item, que vai ser um pouco maior que o usual\",\n    icon: <EqualizerOutlined />,\n    chart: <Data />,\n  },\n];\n","// import React from \"react\";\nimport { useState } from \"react\";\nimport { motion, AnimateSharedLayout, AnimatePresence } from \"framer-motion\";\nimport \"./styles.css\";\nimport { EventsList } from \"../../constants/events\";\nimport { Typography } from \"@material-ui/core\";\n\n/**\n * This is an example of animating shared layouts in Framer Motion 2.\n *\n * The open state of each panel is contained locally to that component. Wrapping\n * them all in the same AnimateSharedLayout component allows them all to animate\n * in response to state changes that affect each other's layout.\n *\n * Try removing AnimateSharedLayout to see how that affects the animation.\n */\n\nexport default function EventList() {\n  return (\n    <AnimateSharedLayout>\n      <motion.ul layout initial={{ borderRadius: 25 }}>\n        {EventsList.map((event) => (\n          <Item key={event.id} event={event} />\n        ))}\n      </motion.ul>\n    </AnimateSharedLayout>\n  );\n}\n\nfunction Item(props) {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggleOpen = () => setIsOpen(!isOpen);\n\n  return (\n    <motion.li\n      layout\n      onClick={toggleOpen}\n      initial={{ borderRadius: 10 }}\n      whileHover={{\n        scale: 1.02,\n        transition: { duration: 0.3 },\n      }}\n    >\n      <motion.div className=\"itemHeader\">\n        <motion.div layout>{props.event.icon}</motion.div>\n\n        <motion.div className=\"itemTitle\" layout>\n          {props.event.title}\n        </motion.div>\n      </motion.div>\n      <AnimatePresence>\n        {isOpen && (\n          <Content\n            description={props.event.description}\n            chart={props.event.chart}\n          />\n        )}\n      </AnimatePresence>\n    </motion.li>\n  );\n}\n\nfunction Content(props) {\n  return (\n    <motion.div\n      layout\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      exit={{ opacity: 0 }}\n    >\n      <Typography variant=\"body1\">{props.description}</Typography>\n      {props.chart}\n    </motion.div>\n  );\n}\n\n// const items = [0, 1, 2];\n","import { createGlobalStyle } from \"styled-components\";\n\nexport default createGlobalStyle`\n* {\n    font-family: 'Helvetica Neue';\n    margin: 0;\n    padding: 0;\n}\n`;\n","import React from \"react\";\nimport EventList from \"./components/eventsList/EventList\";\n\nimport GlobalStyles from \"./styles/global\";\n// import { Main } from \"./styles/index\";\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyles />\n\n      <EventList />\n      {/* <Data /> */}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}