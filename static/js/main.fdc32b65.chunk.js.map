{"version":3,"sources":["constants/events.js","components/eventsList/EventList.jsx","styles/global.ts","styles/index.ts","App.js","index.js"],"names":["EventsList","id","title","description","icon","AccessAlarmOutlined","ChatOutlined","EqualizerOutlined","EventList","AnimateSharedLayout","motion","ul","layout","initial","borderRadius","console","log","items","map","event","Item","props","useState","isOpen","setIsOpen","li","onClick","whileHover","scale","transition","duration","className","div","AnimatePresence","Content","opacity","animate","exit","Typography","variant","createGlobalStyle","styled","main","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAGWA,EAAa,CACpB,CACIC,GAAI,EACJC,MAAO,SACPC,YAAa,2EACbC,KAAM,cAACC,EAAA,EAAD,KAEV,CACIJ,GAAI,EACJC,MAAO,SACPC,YAAa,2EACbC,KAAM,cAACE,EAAA,EAAD,KAEV,CACIL,GAAI,EACJC,MAAO,SACPC,YAAa,2EACbC,KAAM,cAACG,EAAA,EAAD,M,SCHC,SAASC,IACtB,OACI,cAACC,EAAA,EAAD,UACA,eAACC,EAAA,EAAOC,GAAR,CAAWC,QAAM,EAACC,QAAS,CAAEC,aAAc,IAA3C,UACGC,QAAQC,IAAIC,GACZjB,EAAWkB,KAAI,SAAAC,GAAK,OACnB,cAACC,EAAD,CAAkBD,MAAOA,GAAdA,WAOrB,SAASC,EAAKC,GAAQ,IAAD,EACSC,oBAAS,GADlB,mBACZC,EADY,KACJC,EADI,KAKnB,OACE,eAACd,EAAA,EAAOe,GAAR,CAAWb,QAAM,EAACc,QAHD,kBAAMF,GAAWD,IAGKV,QAAS,CAAEC,aAAc,IAAMa,WAAY,CAC9EC,MAAO,KACPC,WAAY,CAAEC,SAAU,KAF5B,UAII,sBAAKC,UAAU,aAAf,UAEI,cAACrB,EAAA,EAAOsB,IAAR,CAAYpB,QAAM,EAAlB,SACKS,EAAMF,MAAMf,OAGjB,cAACM,EAAA,EAAOsB,IAAR,CAAYD,UAAU,YAAYnB,QAAM,EAAxC,SACKS,EAAMF,MAAMjB,WAIrB,cAAC+B,EAAA,EAAD,UAAkBV,GAAU,cAACW,EAAD,CAAS/B,YAAakB,EAAMF,MAAMhB,mBAKtE,SAAS+B,EAAQb,GACf,OACE,cAACX,EAAA,EAAOsB,IAAR,CACEpB,QAAM,EACNC,QAAS,CAAEsB,QAAS,GACpBC,QAAS,CAAED,QAAS,GACpBE,KAAM,CAAEF,QAAS,GAJnB,SAMI,cAACG,EAAA,EAAD,CAAYC,QAAQ,QAApB,SACKlB,EAAMlB,gBAMnB,I,QAAMc,EAAQ,CAAC,EAAG,EAAG,G,gBCrENuB,cAAf,uECAoBC,IAAOC,KAAV,idA8BMD,IAAOC,KAAV,2DAKED,IAAOC,KAAV,iHCpBJC,MAXf,WACE,OACI,qCACE,cAAC,EAAD,IAEA,cAACnC,EAAD,QCPRoC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.fdc32b65.chunk.js","sourcesContent":["import React from \"react\";\nimport { AccessAlarmOutlined, ChatOutlined, EqualizerOutlined } from \"@material-ui/icons\";\n\nexport let EventsList = [\n    {\n        id: 0,\n        title: 'Item 1',\n        description: 'Descriçao bolada sobre o item, que vai ser um pouco maior que o usual',\n        icon: <AccessAlarmOutlined />,\n    },\n    {\n        id: 1,\n        title: 'Item 2',\n        description: 'Descriçao bolada sobre o item, que vai ser um pouco maior que o usual',\n        icon: <ChatOutlined />,\n    },\n    {\n        id: 2,\n        title: 'Item 3',\n        description: 'Descriçao bolada sobre o item, que vai ser um pouco maior que o usual',\n        icon: <EqualizerOutlined />,\n    },\n]","// import React from \"react\";\nimport { useState } from \"react\";\nimport { motion, AnimateSharedLayout, AnimatePresence } from \"framer-motion\";\nimport \"./styles.css\";\nimport { EventsList } from \"../../constants/events\";\nimport { Typography } from \"@material-ui/core\";\n\n/**\n * This is an example of animating shared layouts in Framer Motion 2.\n *\n * The open state of each panel is contained locally to that component. Wrapping\n * them all in the same AnimateSharedLayout component allows them all to animate\n * in response to state changes that affect each other's layout.\n *\n * Try removing AnimateSharedLayout to see how that affects the animation.\n */\n\nexport default function EventList() {\n  return (\n      <AnimateSharedLayout>\n      <motion.ul layout initial={{ borderRadius: 25 }}>\n        {console.log(items)}\n        {EventsList.map(event => (\n          <Item key={event} event={event} />\n        ))}\n      </motion.ul>\n    </AnimateSharedLayout>\n  );\n}\n\nfunction Item(props) {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggleOpen = () => setIsOpen(!isOpen);\n\n  return (\n    <motion.li layout onClick={toggleOpen} initial={{ borderRadius: 10 }} whileHover={{\n        scale: 1.05,\n        transition: { duration: 0.3 }\n      }}>\n        <div className=\"itemHeader\">\n\n            <motion.div layout>\n                {props.event.icon}\n            </motion.div>\n\n            <motion.div className=\"itemTitle\" layout >\n                {props.event.title}\n            </motion.div>\n\n        </div>\n        <AnimatePresence>{isOpen && <Content description={props.event.description}/>}</AnimatePresence>\n    </motion.li>\n  );\n}\n\nfunction Content(props) {\n  return (\n    <motion.div\n      layout\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      exit={{ opacity: 0 }}\n    >\n        <Typography variant='body1' >\n            {props.description}\n        </Typography>\n    </motion.div>\n  );\n}\n\nconst items = [0, 1, 2];\n","import { createGlobalStyle } from \"styled-components\";\n\nexport default createGlobalStyle`\n* {\n    font-family: 'Helvetica Neue'\n}\n`;\n","import styled from 'styled-components';\n\nexport const Main = styled.main`\n    .first {\n    background: red;\n    overflow: hidden;\n    \n        .offset {}\n        .a {\n            background: #f5f1ea;\n        }\n        .b {\n            background: #582534;\n         }\n        .c {\n            background: #0a7397;\n        }\n    }\n    \n    .second {\n        background: green;\n    }\n    \n    .third {\n        background: yellow;\n    }\n    \n    .fourth {\n        background: blue;\n    }\n`\n\nexport const Section = styled.main`\n    position: relative;\n    \n`\n\nexport const Sticky = styled.main`\n    height: 100vh;\n    position: sticky;\n    top: 0;\n    left: 0;\n    right: 0;\n`\n","import React from 'react'\nimport EventList from './components/eventsList/EventList'\n\nimport GlobalStyles from './styles/global'\nimport {Main} from './styles/index'\n\nfunction App() {\n  return (\n      <>\n        <GlobalStyles />\n\n        <EventList />\n        \n      </>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}